/**
 * @name <%= name %>
 * @version <%= version %>
 *
 * Bootstrap
 */

requirejs.config({

  paths: {
    "jquery": "vendor/jquery",
    "underscore": "vendor/underscore",
    "backbone": "vendor/backbone",
    "hitch": "vendor/hitch",
    "text": "vendor/require/text"
  },

  shim: {

    "backbone": {
      deps: [ 'jquery', 'underscore' ],
      exports: 'Backbone'
    },

    "hitch": {
      deps: [ 'backbone' ],
      exports: 'Hitch'
    },

    "app/index": {
      deps: [ 'hitch' ]
    }

  }

});

require([

  '<%= _.compact([].concat(
    _.map(resources, function(r, n) { return 'app/resources/' + n; }),
    _.map(modules, function(r, n) { return 'app/modules/' + n + '/index'; }),
    'app/index'
  )).join("',\n  '") %>'

], function(<%= _.compact([].concat(
  _.map(_.keys(resources), function(n) { return ucFirst(n); }).join(",\n            "),
  _.map(_.keys(modules), function(n) { return ucFirst(n) + 'Router'; }).join(",\n            "),
  name
  )).join(",\n            ") %>
) {

  var <%= _.compact([].concat(_.map(_.keys(resources), function(n) { return n + ' = new ' + ucFirst(n) + '()'; }), 'app = new ' + name + '({ exports: ' + ( exports ? 'true' : 'false' ) + ', apiUrl: \'' + apiUrl + '\' })')).join("\n    , ") %>;
  <% _.each(resources, function(resource, n) { if (!resource.acl) { return; } %>
  <%= n %>.on('load', function(s) {
    var acl = s.getACL();
    <% _.each(resource.acl, function(p, i) { if (i.indexOf('role:') === 0) { %>
    acl.setRoleReadAccess('<%= i %>', <%= p.read %>);
    acl.setRoleWriteAccess('<%= i %>', <%= p.write %>);
    <% } else if (i === 'PUBLIC') { %>
    acl.setPublicReadAccess(<%= p.read %>);
    acl.setPublicWriteAccess(<%= p.write %>);
    <% }}); %>
  });
  <% }); _.each(assets, function(a) { %>
  app.appendAsset('<%= a.type %>', '<%= a.path %>');
  <% }); %>
  app.on('ready', function() {
  <%
    _.each(modules, function(c, n) {
      var p = n + 'Router'
      , r = ucFirst(p);

  %>
    this.<%= p %> = new <%= r %>({
      currentUser: this.getCurrentUser()<%

      var i = z = y = -1
        , l = _.size(c);

      _.each(c, function(v, k) {
        ++i;
        if (_.isObject(v)) {
  %><%= (i>0?",":"") + "\n      " + k %>: {<%
          _.each(v, function(a, o) {
            ++z;
            if (_.isObject(a)) {
%><%= (z>0?",":"") + "\n        " + o %>: {<%
              _.each(a, function(m,n) {
              ++y;
%><%= (y>0?",":"") + "\n          \"" + n + "\": " + m %><%
              }); %>
        }
<%
            } else {
%>    <%= o + ": " + a %><%
            }
          });
%>      }<%
          } else {
            v = ( _.keys(resources).indexOf(v) >= 0 ? 'this.resources.' : '' ) + v;
  %><%= ",\n      " + k %>: <%= v %><%
        }
      });
%>
    });
<% }); %>
    this.run({ pushState: <%= pushState ? 'true' : 'false' %>, root: '<%= root %>' });
  });

  app.load([ <%= _.keys(resources).join(', ') %> ]);

});