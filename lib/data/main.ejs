/**
 * @name <%= name %>
 * @version <%= version %>
 *
 * Bootstrap
 */

requirejs.config({

  paths: {
    "jquery": "vendor/jquery",
    "underscore": "vendor/underscore",
    "backbone": "vendor/backbone",
    "hitch": "vendor/hitch",
    "text": "vendor/require/text"
  },

  shim: {

    "backbone": {
      deps: [ 'jquery', 'underscore' ],
      exports: 'Backbone'
    },

    "hitch": {
      deps: [ 'backbone' ],
      exports: 'Hitch'
    },

    "app/index": {
      deps: [ 'hitch' ]
    }

  }

});

require([

  '<%= _.compact([].concat(
    _.map(resources, function(r, n) { return 'app/resources/' + n; }),
    _.map(modules, function(r, n) { return 'app/modules/' + n + '/index'; }),
    'app/index'
  )).join("',\n  '") %>'

], function(<%= _.compact([].concat(
  _.map(_.keys(resources), function(n) { return ucFirst(n); }).join(",\n            "),
  _.map(_.keys(modules), function(n) { return ucFirst(n) + 'Router'; }).join(",\n            "),
  name
  )).join(",\n            ") %>
) {

  var <%= _.compact([].concat(_.map(resources, function(r,n) { return n + ' = new ' + ucFirst(n) + '(' + (r === true ? '{ load: true }' : '') + ')'; }), 'app = new ' + name + '({ exports: ' + ( exports ? 'true' : 'false' ) + ', apiUrl: \'' + apiUrl + '\' })')).join("\n    , ") %>;
  <% _.each(assets, function(a) { %>
  app.appendAsset('<%= a.type %>', '<%= a.path %>');
  <% }); %>
  app.on('ready', function() {
  <% _.each(modules, function(c, n) { var p = n + 'Router', r = ucFirst(p); %>
    this.<%= p %> = new <%= r %>(<%= objectToJavascriptNotation(c) %>);
  <% }); %>
    this.run({ pushState: <%= pushState ? 'true' : 'false' %>, root: '<%= root %>' });
  });

  app.load([<%= _.keys(_.filter(resources, function(n) { return n === true; })).join(', ') %>]);

});
